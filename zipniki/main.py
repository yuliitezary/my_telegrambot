import telebot
from telebot import types

# –í—Å–µ, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:
token = "5742360177:AAHT3RIXQt-xDQJvgTEbyEYSbiLqxHCXJ9Y" # —Ç–æ–∫–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
id = "6000217072" # –¢–≤–æ–π –∏–¥, —á—Ç–æ-–±—ã –±–æ—Ç –∫–∏–¥–∞–ª —Ç–µ–±–µ –≤—Å–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –±–æ—Ç–µ
site = "https://qiwi.com/n/NICK_NAME" # C—Å—ã–ª–∫–∞ –æ–ø–ª–∞—Ç—ã(–≤ –∫–æ–Ω—Ü–µ —Å—Å—ã–ª–∫–∏ –ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–∏–∫ QIWI)
channel = "https://t.me/joinchat/AAAAAFN22D7brhS9NAcbyg" # –ö–∞–Ω–∞–ª 
op = "–ë–æ–ª—å—à–µ –±–æ—Ç–æ–≤ –Ω–∞ https://conff.org/" # –ê–∫–∫–∞—É–Ω—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞

bot = telebot.TeleBot(token)

@bot.message_handler(commands=["start"])
def repeat_all_messages(message):
  bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–ù–∞–ø–∏—Å–∞–ª: " + str(message.text))
  keyboard = types.InlineKeyboardMarkup()
  button1 = types.InlineKeyboardButton(text="–ú–æ—Å–∫–≤–∞", callback_data="button1")
  button2 = types.InlineKeyboardButton(text="–í–æ—Ä–æ–Ω–µ–∂", callback_data="button2")
  button3 = types.InlineKeyboardButton(text="–ù–æ—Ä–∏–ª—å—Å–∫", callback_data="button3")
  button4 = types.InlineKeyboardButton(text="–¢–æ–º—Å–∫", callback_data="button4")
  button5 = types.InlineKeyboardButton(text="–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", callback_data="button5")
  button6 = types.InlineKeyboardButton(text="–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫", callback_data="button6")
  button7 = types.InlineKeyboardButton(text="–ò—Ä–∫—É—Ç—Å–∫", callback_data="button7")
  button8 = types.InlineKeyboardButton(text="–£–ª–∞–Ω-–£–¥—ç", callback_data="button8")
  button9 = types.InlineKeyboardButton(text="–ë–∏–π—Å–∫", callback_data="button9")
  button10 = types.InlineKeyboardButton(text="–ë–æ—Ä–∏—Å–æ–≥–ª–µ–±—Ü–∫", callback_data="button10")
  button11 = types.InlineKeyboardButton(text="–ü–µ—Ä–º—å", callback_data="button11")
  button12 = types.InlineKeyboardButton(text="–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", callback_data="button12")
  button13 = types.InlineKeyboardButton(text="–°—É—Ä–≥—É—Ç", callback_data="button13")
  button14 = types.InlineKeyboardButton(text="–°–æ—á–∏", callback_data="button14")
  button15 = types.InlineKeyboardButton(text="–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫–∏–π", callback_data="button15")
  button16 = types.InlineKeyboardButton(text="–ê–±–∞–∫–∞–Ω", callback_data="button16")
  button17 = types.InlineKeyboardButton(text="–û—Ä–µ–Ω–±—É—Ä–≥", callback_data="button17")
  button18 = types.InlineKeyboardButton(text="–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", callback_data="button18")
  keyboard.add(button1, button2, button3, button4, button5, button6, button7, button8, button9, button10, button11, button12, button13, button14, button15, button16, button17, button18)
  bot.send_message(message.chat.id, "üõç–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç-–º–∞–≥–∞–∑–∏–Ω.\n‚ÑπÔ∏è–ò–ù–§-–∫–∞–Ω–∞–ª: "+str(channel)+"\n‚öôÔ∏è–û–ø–µ—Ä–∞—Ç–æ—Ä: "+str(op)+"\n‚òòÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", reply_markup=keyboard)

def button(message, city):
  keyboard1 = types.InlineKeyboardMarkup()
  button1 = types.InlineKeyboardButton(text="üí®–í–ï–ô–ü–´", callback_data="blue")
  button2 = types.InlineKeyboardButton(text="üß™–ñ–ò–î–ö–û–°–¢–ò", callback_data="red")
  bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–í—ã–±—Ä–∞–ª: " + str(city))
  keyboard1.add(button1)
  keyboard1.add(button2)
  bot.send_message(message.chat.id, "‚úÖ–í—ã –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥ "+str(city)+".\n‚òòÔ∏è–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=keyboard1)

def blue(message, name):
  keyboard2 = types.InlineKeyboardMarkup()
  button1 = types.InlineKeyboardButton(text="Juul Labs JUUL 8W 200Mah - 900—Ä", callback_data="b3")
  button2 = types.InlineKeyboardButton(text="Logic Compact 350mAh - 1200—Ä", callback_data="b5")
  button3 = types.InlineKeyboardButton(text="Smoant Pasito POD Kit 1100mah - 1800—Ä", callback_data="b1")
  bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–í—ã–±—Ä–∞–ª: " + str(name))
  keyboard2.add(button1)
  keyboard2.add(button2)
  keyboard2.add(button3)
  bot.send_message(message.chat.id, "‚úÖ–í—ã –≤—ã–±—Ä–∞–ª–∏ "+str(name)+".\n‚òòÔ∏è–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤–µ–π–ø:", reply_markup=keyboard2)

def red(message, name):
  keyboard2 = types.InlineKeyboardMarkup()
  button1 = types.InlineKeyboardButton(text="–ë—Ä–∞—Ç–∏—à–∫–∞ 228(30–º–ª) - 200—Ä", callback_data="r3")
  button2 = types.InlineKeyboardButton(text="Virginia(60–º–ª) - 400—Ä", callback_data="r6")
  button3 = types.InlineKeyboardButton(text="Frisco Salt Soma Menthol(30–º–ª) - 1100—Ä", callback_data="r1")
  bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–í—ã–±—Ä–∞–ª: " + str(name))
  keyboard2.add(button1)
  keyboard2.add(button2)
  keyboard2.add(button3)
  bot.send_message(message.chat.id, "‚úÖ–í—ã –≤—ã–±—Ä–∞–ª–∏ "+str(name)+".\n‚òòÔ∏è–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∏–¥–∫–æ—Å—Ç—å:", reply_markup=keyboard2)

def buy(message):
  keyboard = types.InlineKeyboardMarkup()
  button1 = types.InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å —Å–µ–π—á–∞—Å",url=site, callback_data="by")
  keyboard.add(button1)
  bot.send_message(message.chat.id, "‚úÖ–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:", reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
  message = call.message
  if call.message:
   if call.data == "button1":
      button(call.message, "–ú–æ—Å–∫–≤–∞")
   elif call.data == "button2":
      button(call.message, "–í–æ—Ä–æ–Ω–µ–∂")
   elif call.data == "button3":
      button(call.message, "–ù–æ—Ä–∏–ª—å—Å–∫")
   elif call.data == "button4":
      button(call.message, "–¢–æ–º—Å–∫")
   elif call.data == "button5":
      button(call.message, "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä")
   elif call.data == "button6":
      button(call.message, "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫")
   elif call.data == "button7":
      button(call.message, "–ò—Ä–∫—É—Ç—Å–∫")
   elif call.data == "button8":
      button(call.message, "–£–ª–∞–Ω-–£–¥—ç")
   elif call.data == "button9":
      button(call.message, "–ë–∏–π—Å–∫")
   elif call.data == "button10":
      button(call.message, "–ë–æ—Ä–∏—Å–æ–≥–ª–µ–±—Ü–∫")
   elif call.data == "button11":
        button(call.message, "–ü–µ—Ä–º—å")
   elif call.data == "button12":
      button(call.message, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥")
   elif call.data == "button13":
      button(call.message, "–°—É—Ä–≥—É—Ç")
   elif call.data == "button14":
      button(call.message, "–°–æ—á–∏")
   elif call.data == "button15":
      button(call.message, "–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫–∏–π")
   elif call.data == "button16":
      button(call.message, "–ê–±–∞–∫–∞–Ω")
   elif call.data == "button17":
      button(call.message, "–û—Ä–µ–Ω–±—É—Ä–≥")
   elif call.data == "button18":
      button(call.message, "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥")
   elif call.data == "blue":
      blue(call.message, "üí®–í–ï–ô–ü–´")
   elif call.data == "red":
      red(call.message, "üß™–ñ–ò–î–ö–û–°–¢–ò")
   elif call.data == "b3":
      bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–û–ø–ª–∞—á–∏–≤–∞–µ—Ç: Juul Labs JUUL 8W 200Mah")
      bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞-QIWI\n–í—ã –≤—ã–±—Ä–∞–ª–∏ Juul Labs JUUL 8W 200Mah\n–ö –æ–ø–ª–∞—Ç–µ: 900—Ä.\n–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π: "+str(message.chat.id))
      buy(message)
   elif call.data == "b5":
      bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–û–ø–ª–∞—á–∏–≤–∞–µ—Ç: Logic Compact 350mAh")
      bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞-QIWI\n–í—ã –≤—ã–±—Ä–∞–ª–∏ Logic Compact 350mAh\n–ö –æ–ø–ª–∞—Ç–µ: 1200—Ä.\n–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π: "+str(message.chat.id))
      buy(message)
   elif call.data == "b1":
      bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–û–ø–ª–∞—á–∏–≤–∞–µ—Ç: Smoant Pasito POD Kit 1100mah")
      bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞-QIWI\n–í—ã –≤—ã–±—Ä–∞–ª–∏ Smoant Pasito POD Kit 1100mah\n–ö –æ–ø–ª–∞—Ç–µ: 1800—Ä.\n–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π: "+str(message.chat.id))
      buy(message)
   elif call.data == "r3":
      bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–û–ø–ª–∞—á–∏–≤–∞–µ—Ç: –ë—Ä–∞—Ç–∏—à–∫–∞ 228(30–º–ª)")
      bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞-QIWI\n–í—ã –≤—ã–±—Ä–∞–ª–∏ –ë—Ä–∞—Ç–∏—à–∫–∞ 228(30–º–ª)\n–ö –æ–ø–ª–∞—Ç–µ: 200—Ä.\n–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π: "+str(message.chat.id))
      buy(message)
   elif call.data == "r6":
      bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–û–ø–ª–∞—á–∏–≤–∞–µ—Ç: Virginia(60–º–ª)")
      bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞-QIWI\n–í—ã –≤—ã–±—Ä–∞–ª–∏ Virginia(60–º–ª)\n–ö –æ–ø–ª–∞—Ç–µ: 400—Ä.\n–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π: "+str(message.chat.id))
      buy(message)
   elif call.data == "r1":
      bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–û–ø–ª–∞—á–∏–≤–∞–µ—Ç: Frisco Salt Soma Menthol(30–º–ª)")
      bot.send_message(message.chat.id, "–û–ø–ª–∞—Ç–∞-QIWI\n–í—ã –≤—ã–±—Ä–∞–ª–∏ Frisco Salt Soma Menthol(30–º–ª)\n–ö –æ–ø–ª–∞—Ç–µ: 1100—Ä.\n–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π: "+str(message.chat.id))
      buy(message)
@bot.message_handler(content_types=['text'])
def echo_all(message):
      bot.send_message(id, str(message.chat.first_name) + " [ "+ str(message.chat.id)+" ] |–ù–∞–ø–∏—Å–∞–ª: " + str(message.text))
      bot.send_message(message.chat.id, "–í—ã —á—Ç–æ-—Ç–æ –¥–µ–ª–∞–µ—Ç–µ –Ω–µ —Ç–∞–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ - /start")

while True:
  bot.polling(none_stop=True)